<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Calculadora de inversión avanzada</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>
  <style>
    :root {
      --fondo-claro: #f4f6f8;
      --texto-claro: #333;
      --primario: #2b6777;
      --hover: #1b4d5b;
      --tabla-head: #ddeeee;
      --boton-texto: #fff;
      --portada: #2e3552;
      --verde: #28a745;
      --verde-hover: #218838;
      --texto-grande: 16px;
    }
    body.dark {
      --fondo-claro: #121212;
      --texto-claro: #e0e0e0;
      --tabla-head: #1f1f1f;
      --boton-texto: #fff;
    }
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: var(--fondo-claro);
      color: var(--texto-claro);
      padding: 20px;
      max-width: 900px;
      margin: auto;
      transition: background-color 0.4s, color 0.4s;
    }
    #portada {
      background-color: var(--portada);
      color: #fff;
      text-align: center;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 150px;
    }
    #portada img {
      width: 100%;
      max-height: 200px;
      object-fit: contain;
      border-radius: 8px;
    }
    label {
      margin-top: 15px;
      display: block;
      font-weight: 600;
      font-size: var(--texto-grande);
    }
    input {
      padding: 10px;
      border: 1px solid #ccc;
      width: 100%;
      border-radius: 5px;
      margin-top: 5px;
      background-color: #fff;
      transition: background-color 0.3s, color 0.3s;
    }
    body.dark input {
      background-color: #2a2a2a;
      color: #e0e0e0;
      border: 1px solid #555;
    }
    .input-container {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-top: 5px;
    }
    .input-container input {
      width: 20%;
    }
    .input-container span {
      font-weight: normal;
      font-size: 14px;
      color: var(--texto-claro);
      width: 100%;
      padding-left: 10px;
      word-wrap: break-word;
    }
    button {
      padding: 10px 16px;
      background-color: var(--primario);
      color: var(--boton-texto);
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 600;
      transition: background-color 0.3s, transform 0.2s;
    }
    .boton-calcular {
      background-color: var(--verde);
      width: 160px;
    }
    .boton-calcular:hover {
      background-color: var(--verde-hover);
    }
    .result {
      margin-top: 20px;
      font-size: 16px;
      font-weight: bold;
      color: var(--primario);
      line-height: 1.6;
    }
    #tablaResultados {
      width: 100%;
      margin-top: 20px;
      border-collapse: collapse;
      background-color: #fff;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      display: none;
    }
    #tablaResultados th, 
    #tablaResultados td {
      padding: 12px 8px;
      text-align: center;
      border-bottom: 1px solid #eee;
      white-space: nowrap;
    }
    #tablaResultados th {
      background-color: var(--primario);
      color: white;
      position: sticky;
      top: 0;
    }
    body.dark #tablaResultados {
      background-color: #1f1f1f;
      color: #e0e0e0;
    }
    body.dark #tablaResultados th {
      background-color: #2c2c2c;
    }
    body.dark #tablaResultados td {
      border-color: #444;
    }
    canvas {
      margin-top: 30px;
      background-color: #fff;
      border-radius: 8px;
      padding: 10px;
      width: 100% !important;
    }
    body.dark canvas {
      background-color: #1f1f1f;
    }
    .buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-top: 15px;
    }
    .dark-mode-btn {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 999;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
    }
    .leyenda {
      font-size: 14px;
      font-style: italic;
      margin-top: 20px;
      margin-bottom: -5px;
      color: #555;
    }
    body.dark .leyenda {
      color: #aaa;
    }
    .tabla-container {
      overflow-x: auto;
      margin-top: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .tabla-titulo {
      background-color: var(--primario);
      color: white;
      padding: 12px;
      border-radius: 8px 8px 0 0;
      font-weight: bold;
      display: none;
    }
    body.dark .tabla-titulo {
      background-color: #2c2c2c;
    }
    .tooltip-icon {
      display: inline-block;
      width: 18px;
      height: 18px;
      background-color: var(--primario);
      color: white;
      border-radius: 50%;
      text-align: center;
      font-size: 12px;
      margin-left: 5px;
      cursor: help;
    }
  </style>
</head>
<body>
  <div id="portada">
    <img src="https://raw.githubusercontent.com/JohanMoran/Proyeccion-de-Inversiones/main/ROBPAIERO_TUASESORDECONFIANZA.PNG" 
         alt="Calculadora de Inversión Robpairé">
  </div>
  <button class="dark-mode-btn" onclick="toggleDarkMode()">🌙 Modo Oscuro</button>

  <label>MONTO INICIAL:</label>
  <div class="input-container">
    <input type="number" id="capitalInicial" />
    <span>¿Con qué cantidad cuentas en este momento? ¿Con cuánto empezarás tu inversión?</span>
  </div>

  <label>Tasa Anual (%):</label>
  <div class="input-container">
    <input type="number" id="tasa" step="0.01" />
    <span>Tasa de Interés anual, inversionistas conservadores (renta fija) 10% - 15%.</span>
  </div>

  <label>Plazo (en meses):</label>
  <div class="input-container">
    <input type="number" id="plazo" min="1" />
    <span>¿Cuántos años vas a realizar la inversión? ¿Cuál es tu horizonte de inversión?</span>
  </div>

  <label>Aportación mensual:</label>
  <div class="input-container">
    <input type="number" id="aportacion" />
    <span>¿Cuánto puedes destinar a tu inversión al mes para incrementar tus rendimientos?</span>
  </div>

  <label>Fecha de inicio:</label>
  <div class="input-container">
    <input type="date" id="fechaInicio" />
    <span>Fecha en que tienes pensado dar inicio a tu inversión</span>
  </div>

  <label>Capital objetivo (opcional):</label>
  <div class="input-container">
    <input type="number" id="capitalObjetivo" placeholder="Ej: 500000" />
    <span>¿Ya tienes un objetivo (ir de viaje, comprar un auto, etc.)? Elige un monto con el que alcanzarás ese objetivo</span>
  </div>

  <div class="leyenda">
    Calculadora de Interés Compuesto con Aportación mensual. Herramienta para uso estrictamente con fines informativos y educativos.
  </div>

  <div class="buttons">
    <button class="boton-calcular" onclick="calcular()">Calcular</button>
    <button onclick="descargarCSV()">Descargar Excel</button>
    <button onclick="descargarPDF()">Descargar PDF Premium</button>
  </div>

  <div class="result" id="resultado"></div>
  <div class="result" id="resumenFinal"></div>
  <canvas id="grafica" height="300"></canvas>

  <div class="tabla-titulo" id="tablaTitulo">Tabla Amortizada de Inversión</div>
  <div class="tabla-container">
    <table id="tablaResultados">
      <thead>
        <tr>
          <th>Mes</th>
          <th>Fecha</th>
          <th>Aportación ($)</th>
          <th>Interés ($)</th>
          <th>Total ($)</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    // Variables globales
    let datosGrafica = [];
    let totalAportaciones = 0, totalInteres = 0, capital = 0;
    let chart = null;
    const { jsPDF } = window.jspdf;

    // Función para alternar modo oscuro/claro
    function toggleDarkMode() {
      document.body.classList.toggle("dark");
      if (chart) {
        chart.update();
      }
      localStorage.setItem('darkMode', document.body.classList.contains('dark'));
    }

    // Cargar preferencia de modo oscuro al iniciar
    if (localStorage.getItem('darkMode') === 'true') {
      document.body.classList.add('dark');
    }

    // Formatear moneda
    function formatCurrency(value) {
      return new Intl.NumberFormat('es-MX', { 
        style: 'currency', 
        currency: 'MXN',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
      }).format(value);
    }

    // Función principal de cálculo
    function calcular() {
      const capitalInicial = parseFloat(document.getElementById('capitalInicial').value) || 0;
      const tasa = parseFloat(document.getElementById('tasa').value) || 0;
      const plazo = parseInt(document.getElementById('plazo').value) || 0;
      const aportacion = parseFloat(document.getElementById('aportacion').value) || 0;
      const capitalObjetivo = parseFloat(document.getElementById('capitalObjetivo').value) || null;
      const fechaInicio = new Date(document.getElementById('fechaInicio').value);

      // Validaciones
      if (plazo <= 0 || tasa <= 0) {
        alert("Por favor, ingresa un plazo y una tasa válidos.");
        return;
      }

      // Reiniciar variables
      capital = capitalInicial;
      totalInteres = 0;
      totalAportaciones = 0;
      const tasaMensual = tasa / 12 / 100;
      const tabla = document.querySelector('#tablaResultados tbody');
      tabla.innerHTML = '';
      datosGrafica = [];
      let meses = plazo;
      let cumpleObjetivo = false;

      // Calcular meses necesarios si hay objetivo
      if (capitalObjetivo) {
        for (let i = 1; i <= 600; i++) {
          const interes = capital * tasaMensual;
          capital += interes + aportacion;
          if (capital >= capitalObjetivo) {
            meses = i;
            cumpleObjetivo = true;
            break;
          }
        }
        capital = capitalInicial; // Resetear para cálculo completo
      }

      // Generar tabla mes por mes
      for (let i = 1; i <= meses; i++) {
        const interes = capital * tasaMensual;
        totalInteres += interes;
        capital += interes + aportacion;
        totalAportaciones += aportacion;

        const fecha = new Date(fechaInicio);
        fecha.setMonth(fecha.getMonth() + i);

        tabla.innerHTML += `
          <tr>
            <td>${i}</td>
            <td>${fecha.toLocaleDateString('es-MX', { day: '2-digit', month: '2-digit', year: 'numeric' })}</td>
            <td>${formatCurrency(aportacion)}</td>
            <td>${formatCurrency(interes)}</td>
            <td>${formatCurrency(capital)}</td>
          </tr>
        `;

        datosGrafica.push({ mes: i, total: capital });
      }

      // Mostrar resultados
      document.getElementById('resultado').innerHTML = `
        <strong>📊 Resumen de Inversión:</strong><br>
        • Capital inicial: ${formatCurrency(capitalInicial)}<br>
        • Tasa de interés anual: ${tasa}%<br>
        • Plazo: ${meses} meses (${(meses/12).toFixed(1)} años)<br>
        • Aportación mensual: ${formatCurrency(aportacion)}<br>
        • Total aportado: ${formatCurrency(totalAportaciones)}<br>
        • Total interés generado: ${formatCurrency(totalInteres)}<br>
        <strong>💰 Total al final del plazo: ${formatCurrency(capital)}</strong>
      `;

      // Mensaje especial si se alcanzó el objetivo
      if (cumpleObjetivo) {
        const años = Math.floor(meses / 12);
        const mesesRestantes = meses % 12;
        
        let textoMeses = "";
        if (años > 0) textoMeses += `${años} ${años === 1 ? 'año' : 'años'}`;
        if (mesesRestantes > 0) {
          if (años > 0) textoMeses += " y ";
          textoMeses += `${mesesRestantes} ${mesesRestantes === 1 ? 'mes' : 'meses'}`;
        }
        if (meses < 12) textoMeses = `${meses} ${meses === 1 ? 'mes' : 'meses'}`;

        document.getElementById('resumenFinal').innerHTML = `
          🎉 <strong>¡Felicidades! Tu objetivo de ${formatCurrency(capitalObjetivo)} se alcanzará en ${textoMeses}</strong><br>
          💡 Consejo: Considera aumentar tus aportaciones para llegar aún más rápido.
        `;
      }

      // Mostrar tabla y título
      document.getElementById('tablaResultados').style.display = "table";
      document.getElementById('tablaTitulo').style.display = "block";

      generarGrafico();
    }

    // Generar gráfico interactivo
    function generarGrafico() {
      const ctx = document.getElementById('grafica').getContext('2d');
      
      if (chart) chart.destroy();

      chart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: datosGrafica.map(d => `Mes ${d.mes}`),
          datasets: [{
            label: 'Total acumulado (MXN)',
            data: datosGrafica.map(d => d.total),
            borderColor: '#2b6777',
            backgroundColor: 'rgba(43, 103, 119, 0.1)',
            fill: true,
            tension: 0.3,
            borderWidth: 2,
            pointRadius: 3,
            pointBackgroundColor: '#2b6777'
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top',
              labels: {
                font: {
                  size: 14
                }
              }
            },
            tooltip: {
              callbacks: {
                label: (context) => ` ${formatCurrency(context.raw)}`
              }
            }
          },
          scales: {
            y: {
              beginAtZero: false,
              ticks: {
                callback: (value) => formatCurrency(value)
              },
              grid: {
                color: 'rgba(0, 0, 0, 0.1)'
              }
            },
            x: {
              grid: {
                display: false
              }
            }
          }
        }
      });
    }

    // Descargar PDF profesional
    function descargarPDF() {
      if (datosGrafica.length === 0) {
        alert("Primero calcula una inversión.");
        return;
      }

      const doc = new jsPDF({
        orientation: 'portrait',
        unit: 'mm',
        format: 'a4'
      });
      
      // Configuración de página
      const pageWidth = doc.internal.pageSize.getWidth();
      const pageHeight = doc.internal.pageSize.getHeight();
      const margin = 20;

      // --- Logo ---
      const logoUrl = "https://raw.githubusercontent.com/JohanMoran/Proyeccion-de-Inversiones/main/ROBPAIERO_TUASESORDECONFIANZA.PNG";
      doc.addImage(logoUrl, 'PNG', pageWidth - margin - 30, 15, 30, 15);

      // --- Fondo (comentado por defecto) ---
      // const fondoUrl = "URL_DE_TU_FONDO";
      // doc.addImage(fondoUrl, 'JPEG', 0, 0, pageWidth, pageHeight, undefined, 'FAST');

      // --- Encabezado ---
      doc.setFontSize(22);
      doc.setTextColor(43, 103, 119);
      doc.setFont('helvetica', 'bold');
      doc.text("Reporte de Inversión", pageWidth / 2, 25, { align: 'center' });

      // --- Línea decorativa ---
      doc.setDrawColor(43, 103, 119);
      doc.setLineWidth(0.5);
      doc.line(margin, 30, pageWidth - margin, 30);

      // --- Datos de la inversión ---
      doc.setFontSize(12);
      doc.setTextColor(0, 0, 0);
      doc.setFont('helvetica', 'normal');

      const capitalInicial = parseFloat(document.getElementById('capitalInicial').value) || 0;
      const tasa = parseFloat(document.getElementById('tasa').value) || 0;
      const plazo = parseInt(document.getElementById('plazo').value) || 0;
      const aportacion = parseFloat(document.getElementById('aportacion').value) || 0;
      const fechaInicio = document.getElementById('fechaInicio').value;

      // Sección con fondo
      doc.setFillColor(240, 240, 240);
      doc.rect(margin, 35, pageWidth - 2 * margin, 25, 'F');
      doc.text("Datos de la inversión", margin + 5, 42);
      
      // Texto organizado en columnas
      doc.text(`• Capital inicial: ${formatCurrency(capitalInicial)}`, margin + 5, 50);
      doc.text(`• Tasa anual: ${tasa}%`, margin + 5, 56);
      doc.text(`• Plazo: ${plazo} meses`, pageWidth / 2 + 10, 50);
      doc.text(`• Aportación: ${formatCurrency(aportacion)}`, pageWidth / 2 + 10, 56);
      doc.text(`• Fecha inicio: ${fechaInicio || 'No especificada'}`, margin + 5, 62);

      // --- Gráfico ---
      if (chart) chart.update();
      setTimeout(() => {
        const canvas = document.getElementById('grafica');
        const graficaImg = canvas.toDataURL('image/png', 1.0);
        doc.addImage(graficaImg, 'PNG', margin, 70, pageWidth - 2 * margin, 80);

        // --- Resultados finales ---
        doc.setFillColor(230, 245, 230);
        doc.rect(margin, 155, pageWidth - 2 * margin, 15, 'F');
        doc.setFont('helvetica', 'bold');
        doc.setTextColor(0, 100, 0);
        doc.text("Resultados finales", margin + 5, 165);
        
        doc.setFont('helvetica', 'normal');
        doc.setTextColor(0, 0, 0);
        doc.text(`Total aportado: ${formatCurrency(totalAportaciones)}`, margin + 5, 175);
        doc.text(`Interés generado: ${formatCurrency(totalInteres)}`, pageWidth / 2, 175);
        doc.setFont('helvetica', 'bold');
        doc.text(`Total acumulado: ${formatCurrency(capital)}`, margin + 5, 185);

        // --- Tabla ---
        doc.setFontSize(10);
        doc.setTextColor(0, 0, 0);
        doc.text("Detalle mes a mes", margin + 5, 195);

        doc.autoTable({
          html: '#tablaResultados',
          startY: 200,
          margin: { left: margin, right: margin },
          headStyles: {
            fillColor: [43, 103, 119],
            textColor: 255,
            fontSize: 9,
            halign: 'center'
          },
          bodyStyles: {
            fontSize: 8,
            cellPadding: 2
          },
          columnStyles: {
            0: { cellWidth: 12, halign: 'center' }, // Mes
            1: { cellWidth: 25, halign: 'center' },  // Fecha
            4: { fontStyle: 'bold', halign: 'right' } // Total
          },
          styles: {
            overflow: 'linebreak',
            valign: 'middle'
          }
        });

        // --- Pie de página ---
        doc.setFontSize(10);
        doc.setTextColor(100);
        doc.text("© " + new Date().getFullYear() + " Robpairé - Asesoría Financiera | contacto@robpaire.com", 
                pageWidth / 2, pageHeight - 10, { align: 'center' });

        // --- Marca de agua ---
        doc.setFontSize(40);
        doc.setTextColor(230, 230, 230);
        doc.setGState(new doc.GState({ opacity: 0.1 }));
        doc.text("Robpairé", 60, 150, { angle: 45 });

        doc.save('reporte_inversion_robpaire.pdf');
      }, 300);
    }

    // Descargar CSV
    function descargarCSV() {
      if (datosGrafica.length === 0) {
        alert("Primero calcula una inversión.");
        return;
      }
      
      let csv = "Mes,Fecha,Aportación ($),Interés ($),Total ($)\n";
      const rows = document.querySelectorAll('#tablaResultados tbody tr');
      
      rows.forEach(row => {
        const cells = row.querySelectorAll('td');
        csv += `"${cells[0].textContent}","${cells[1].textContent}","${cells[2].textContent.replace('$','')}","${cells[3].textContent.replace('$','')}","${cells[4].textContent.replace('$','')}"\n`;
      });
      
      const blob = new Blob(["\uFEFF" + csv], { type: 'text/csv;charset=utf-8;' });
      const link = document.createElement('a');
      link.href = URL.createObjectURL(blob);
      link.download = 'inversion_robpaire.csv';
      link.click();
    }

    // Inicialización
    document.addEventListener('DOMContentLoaded', function() {
      document.getElementById('fechaInicio').valueAsDate = new Date();
    });
  </script>
</body>
</html>
